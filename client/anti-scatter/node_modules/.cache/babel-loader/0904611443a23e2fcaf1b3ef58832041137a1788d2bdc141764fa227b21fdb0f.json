{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\OneDrive\\\\Documents\\\\GitHub\\\\Anti-Scatter\\\\client\\\\anti-scatter\\\\src\\\\pages\\\\Message.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\n// This is the second configuration option\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [data, setData] = useState(\"hi\");\n  useEffect(() => {\n    // Define the URL of the backend endpoint\n    const backendUrl = 'http://localhost:4000/api/data';\n\n    // Make a GET request to the backend\n    axios.get(backendUrl).then(response => {\n      // Handle the response data\n      setData(response);\n      console.log(response);\n    }).catch(error => {\n      // Handle errors\n      console.error('Error:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Message, \"hs40TqaawXl5752ORxcgInNH/Ug=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","ToastContainer","toast","jsxDEV","_jsxDEV","Message","_s","data","setData","backendUrl","get","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/OneDrive/Documents/GitHub/Anti-Scatter/client/anti-scatter/src/pages/Message.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\n// This is the second configuration option\r\nconst Message = () =>{\r\n    const [data, setData] = useState(\"hi\");\r\n\r\n    useEffect(() => {\r\n        // Define the URL of the backend endpoint\r\n        const backendUrl = 'http://localhost:4000/api/data';\r\n\r\n        // Make a GET request to the backend\r\n        axios.get(backendUrl)\r\n        .then((response) => {\r\n            // Handle the response data\r\n            setData(response);\r\n            console.log(response);\r\n        })\r\n        .catch((error) => {\r\n            // Handle errors\r\n            console.error('Error:', error);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Message</h1>\r\n            <p>{data}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,UAAU,GAAG,gCAAgC;;IAEnD;IACAT,KAAK,CAACU,GAAG,CAACD,UAAU,CAAC,CACpBE,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACAJ,OAAO,CAACI,QAAQ,CAAC;MACjBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACzB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MACd;MACAH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MAAAa,QAAA,EAAIV;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAACf,EAAA,CA1BID,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}